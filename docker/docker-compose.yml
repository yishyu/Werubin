version: '3.7'

services:
  web:
    build:
      context: ../
      dockerfile: docker/django.dockerfile
    volumes:
      - static_volume:/srv/static
      - media_volume:/srv/media
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
    networks:
      - private
    restart: unless-stopped

  db:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    networks:
      - private
    restart: unless-stopped

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/srv/static
      - media_volume:/srv/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.werubin.entrypoints=http"
      - "traefik.http.routers.werubin.rule=Host(`werubin.yueat.be`)"
      - "traefik.http.middlewares.werubin-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.werubin.middlewares=werubin-https-redirect"
      - "traefik.http.routers.werubin-secure.entrypoints=https"
      - "traefik.http.routers.werubin-secure.rule=Host(`werubin.yueat.be`)"
      - "traefik.http.routers.werubin-secure.tls=true"
      - "traefik.http.routers.werubin-secure.tls.certresolver=http"
      - "traefik.http.routers.werubin-secure.service=nginx-werubin@docker"
      - "traefik.docker.network=traefik-proxy"
    depends_on:
      - web
    networks:
      - private
      - public
      - traefik-proxy
    restart: unless-stopped

networks:
  private:
    driver: overlay
  public:
    external: true
  traefik-proxy:
    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume:

